
### Create first tradeoffer to test transaction validator endpoints
POST http://localhost:8000/vault/offer
Content-Type: application/json

{
  "itemId": 15,
  "fromVaultId": 1,
  "toVaultId": 3,
  "type": "SELL",
  "price": 1000
}

### Create second tradeoffer to test transaction validator endpoints
POST http://localhost:8000/vault/offer
Content-Type: application/json

{
  "itemId": 7,
  "fromVaultId": 3,
  "toVaultId": 1,
  "type": "SELL",
  "price": 1000
}



### GetAllIncomingTradeOffersWithAccountID : check response status is 200
GET {{host}}/incoming/1

> {%
    client.test("Request executed successfully", function () {
        client.assert(response.status === 200, "Response status is not 200");
    });
%}



### GetAllOutgoingTradeOffersWithAccountID : check response status is 200
GET {{host}}/outgoing/1

> {%
    client.test("Request executed successfully",  function () {
         client.assert(response.status === 200, "Response status is not 200");
    });
%}



### AcceptTradeOfferWithTransactionID : : check response status is 200
GET {{host}}/accept/1

> {%
    client.test("Request executed successfully",  function () {

            client.assert(response.status === 200, "Response status is not 200");
    });
%}



### DeclineTradeOfferWithTransactionID : : check response status is 200
GET {{host}}/decline/2

> {%
    client.test("Request executed successfully",  function () {
        client.assert(response.status === 200, "Response status is not 200");
    });
%}

